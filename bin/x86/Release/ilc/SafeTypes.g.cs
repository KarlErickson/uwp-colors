#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace _
{
	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages
	{
		public uint MaxCharSize;
		public global::_.Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages DefaultChar;
		public global::_.Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages LeadByte;
		public char UnicodeDefaultChar;
		public uint CodePage;
		public global::_.Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages CodePageName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=" +
		"neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture=neu" +
		"tral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=260)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.1.0, Culture" +
		"=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}
}

namespace Internal_WinRT_Interop
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+DispatcherQueuePriority,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public enum WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib
	{
		Low = -10,
		Normal = 0,
		High = 10,
	}
}

namespace Internal_WinRT_Interop_WinRTCallbacks
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueHandler,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib
	{
		void Invoke();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueue,System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Cul" +
		"ture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueue__System_Private_WinRTInterop_CoreLib
	{
		object CreateTimer();

		bool TryEnqueue(global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);

		bool TryEnqueue(
					global::Internal_WinRT_Interop.WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib priority, 
					global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueStatics,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueStatics__System_Private_WinRTInterop_CoreLib
	{
		global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueue__System_Private_WinRTInterop_CoreLib GetForCurrentThread();
	}
}

namespace System_Runtime_InteropServices
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, P" +
		"ublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface IClassFactory__System_Private_Interop
	{
		int CreateInstance(
					global::System.IntPtr pUnkOuter, 
					global::System.Guid* riid, 
					global::System.IntPtr* ppvObject);

		int LockServer(int fLock);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
		"KeyToken=b77a5c561934e089")]
	public unsafe interface IMarshal__System_Runtime_WindowsRuntime
	{
		void GetUnmarshalClass(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlFlags, 
					out global::System.Guid pCid);

		void GetMarshalSizeMax(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags, 
					out uint pSize);

		void MarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags);

		void UnmarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					out global::System.IntPtr ppv);

		void ReleaseMarshalData(global::System.IntPtr pStm);

		void DisconnectObject(uint dwReserved);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IAgileObject,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Pu" +
		"blicKeyToken=b77a5c561934e089")]
	public unsafe interface IAgileObject__System_Runtime_WindowsRuntime
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, Pu" +
		"blicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial class ClassFactory__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=24)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING_HEADER,System.Private.Interop, Version=999.999.999.999, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING_HEADER__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING,System.Private.Interop, Version=999.999.999.999, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING__System_Private_Interop
	{
		public global::System.IntPtr handle;
	}
}

namespace System_Runtime_InteropServices_ComTypes
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeInfo__System_Private_Interop
	{
		void GetTypeAttr(out global::System.IntPtr ppTypeAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetFuncDesc(
					int index, 
					out global::System.IntPtr ppFuncDesc);

		void GetVarDesc(
					int index, 
					out global::System.IntPtr ppVarDesc);

		void GetNames(
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames);

		void GetRefTypeOfImplType(
					int index, 
					out int href);

		void GetImplTypeFlags(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags);

		void GetIDsOfNames(
					string[] rgszNames, 
					int cNames, 
					int[] pMemId);

		void Invoke(
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System_Runtime_InteropServices_ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		void GetDllEntry(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal);

		void GetRefTypeInfo(
					int hRef, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void AddressOfMember(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv);

		void CreateInstance(
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj);

		void GetMops(
					int memid, 
					out string pBstrMops);

		void GetContainingTypeLib(
					out global::System_Runtime_InteropServices_ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex);

		void ReleaseTypeAttr(global::System.IntPtr pTypeAttr);

		void ReleaseFuncDesc(global::System.IntPtr pFuncDesc);

		void ReleaseVarDesc(global::System.IntPtr pVarDesc);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeComp__System_Private_Interop
	{
		void Bind(
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System_Runtime_InteropServices_ComTypes.BINDPTR__System_Private_Interop pBindPtr);

		void BindType(
					string szName, 
					int lHashVal, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeLib__System_Private_Interop
	{
		int GetTypeInfoCount();

		void GetTypeInfo(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void GetTypeInfoType(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.TYPEKIND__System_Private_Interop pTKind);

		void GetTypeInfoOfGuid(
					ref global::System.Guid guid, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo);

		void GetLibAttr(out global::System.IntPtr ppTLibAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		bool IsName(
					string szNameBuf, 
					int lHashVal);

		void FindName(
					string szNameBuf, 
					int lHashVal, 
					global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound);

		void ReleaseTLibAttr(global::System.IntPtr pTLibAttr);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DESCKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum DESCKIND__System_Private_Interop
	{
		DESCKIND_NONE = 0,
		DESCKIND_FUNCDESC = 1,
		DESCKIND_VARDESC = 2,
		DESCKIND_TYPECOMP = 3,
		DESCKIND_IMPLICITAPPOBJ = 4,
		DESCKIND_MAX = 5,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=4)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.BINDPTR,System.Private.Interop, Version=999.999.999.999, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct BINDPTR__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpfuncdesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpvardesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lptcomp;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS,System.Private.Interop, Version=999.999.999.999, Culture=n" +
		"eutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum IMPLTYPEFLAGS__System_Private_Interop
	{
		IMPLTYPEFLAG_FDEFAULT = 1,
		IMPLTYPEFLAG_FSOURCE = 2,
		IMPLTYPEFLAG_FRESTRICTED = 4,
		IMPLTYPEFLAG_FDEFAULTVTABLE = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DISPPARAMS,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct DISPPARAMS__System_Private_Interop
	{
		public global::System.IntPtr rgvarg;
		public global::System.IntPtr rgdispidNamedArgs;
		public int cArgs;
		public int cNamedArgs;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum INVOKEKIND__System_Private_Interop
	{
		INVOKE_FUNC = 1,
		INVOKE_PROPERTYGET = 2,
		INVOKE_PROPERTYPUT = 4,
		INVOKE_PROPERTYPUTREF = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.TYPEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum TYPEKIND__System_Private_Interop
	{
		TKIND_ENUM = 0,
		TKIND_RECORD = 1,
		TKIND_MODULE = 2,
		TKIND_INTERFACE = 3,
		TKIND_DISPATCH = 4,
		TKIND_COCLASS = 5,
		TKIND_ALIAS = 6,
		TKIND_UNION = 7,
		TKIND_MAX = 8,
	}
}

namespace System_Runtime_InteropServices_WindowsRuntime
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.WindowsRuntime.IBufferByteAccess,System.Runtime.WindowsRuntime, Version=4.0.14.0," +
		" Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IBufferByteAccess__System_Runtime_WindowsRuntime
	{
		global::System.IntPtr GetBuffer();
	}
}

namespace Windows.ApplicationModel
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		public global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation()
		{
			global::Windows.ApplicationModel.SuspendingOperation __retVal = global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Stubs.get_SuspendingOperation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingOperation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingOperation : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingOperation
	{
		public global::Windows.ApplicationModel.SuspendingDeferral GetDeferral()
		{
			global::Windows.ApplicationModel.SuspendingDeferral __retVal = global::Windows.ApplicationModel.ISuspendingOperation__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingOperation(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingDeferral))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingDeferral : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingDeferral
	{
		public void Complete()
		{
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Stubs.Complete(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public SuspendingDeferral(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ILeavingBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LeavingBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ILeavingBackgroundEventArgs
	{
		public LeavingBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IEnteredBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EnteredBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.IEnteredBackgroundEventArgs
	{
		public EnteredBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Package : global::System.__ComObject, global::Windows.ApplicationModel.IPackage, global::Windows.ApplicationModel.IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public global::Windows.ApplicationModel.PackageId get_Id()
		{
			global::Windows.ApplicationModel.PackageId __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_Id(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		public global::Windows.Storage.StorageFolder get_InstalledLocation()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_InstalledLocation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackage2__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Package get_Current()
		{
			global::Windows.ApplicationModel.Package retval;
			retval = __Factory_Windows_ApplicationModel__IPackageStatics_get_Current("Windows.ApplicationModel.Package");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Package __Factory_Windows_ApplicationModel__IPackageStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Package __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.IPackageStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.IPackageStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Package(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackageId))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PackageId : global::System.__ComObject, global::Windows.ApplicationModel.IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		public string get_FullName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_FullName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public PackageId(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingOperation
	{
		global::Windows.ApplicationModel.SuspendingDeferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingDeferral
	{
		void Complete();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILeavingBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEnteredBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Package get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		global::Windows.ApplicationModel.PackageId get_Id();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		global::Windows.Storage.StorageFolder get_InstalledLocation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}
}

namespace Windows.ApplicationModel.Activation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LaunchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs, global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		public string get_Arguments()
		{
			string __retVal = global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Stubs.get_Arguments(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		public bool get_PrelaunchActivated()
		{
			bool __retVal = global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs__Impl.Stubs.get_PrelaunchActivated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public LaunchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SearchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SearchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ShareTargetActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ShareTargetActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileOpenPickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileOpenPickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileSavePickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileSavePickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CachedFileUpdaterActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CachedFileUpdaterActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BackgroundActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs
	{
		public BackgroundActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		string get_Arguments();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPrelaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		bool get_PrelaunchActivated();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISearchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IShareTargetActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileOpenPickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileSavePickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICachedFileUpdaterActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackgroundActivatedEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ApplicationExecutionState
	{
		NotRunning = 0,
		Running = 1,
		Suspended = 2,
		Terminated = 3,
		ClosedByUser = 4,
	}
}

namespace Windows.ApplicationModel.Resources.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceContext : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		public global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues()
		{
			global::Windows.Foundation.Collections.IObservableMap<string, string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_QualifierValues(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.Clone(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_Languages()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_Languages(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		public void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages)
		{
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.put_Languages(
								this, 
								languages
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse("Windows.ApplicationModel.Resources.Core.ResourceContext");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceContext __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2__Impl.Stubs.GetForViewIndependentUse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceContext(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceManager : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		public global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_MainResourceMap(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_AllResourceMaps(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current("Windows.ApplicationModel.Resources.Core.ResourceManager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceManager __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceMap : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceMap, global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		int global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Count_Get(((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this));
			}
		}

		global::Windows.ApplicationModel.Resources.Core.NamedResource global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this), 
									index
								);
			}
		}

		global::System.Collections.Generic.IEnumerable<string> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.ApplicationModel.Resources.Core.NamedResource> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.TryGetValue(
					string key, 
					out global::Windows.ApplicationModel.Resources.Core.NamedResource value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetValue(
								this, 
								resource, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetSubtree(
								this, 
								reference
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceMap(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NamedResource : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.INamedResource
	{
		public NamedResource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceCandidate : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		public string get_ValueAsString()
		{
			string __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Stubs.get_ValueAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceCandidate(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContextStatics2
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues();

		global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		global::System.Collections.Generic.IReadOnlyList<string> get_Languages();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManagerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceMap : global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context);

		global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INamedResource
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		string get_ValueAsString();
	}
}

namespace Windows.Foundation
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStringable
	{
		string ToString();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct UniversalApiContract
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct FoundationContract
	{
	}
}

namespace Windows.Foundation.Diagnostics
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TracingStatusChangedEventArgs : global::System.__ComObject, global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		public bool get_Enabled()
		{
			bool __retVal = global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Stubs.get_Enabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TracingStatusChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AsyncCausalityTracer : global::System.__ComObject
	{
		public static void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCreation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationRelation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkStart(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
					string typeName, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.add_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		public static void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.remove_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AsyncCausalityTracer(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		bool get_Enabled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAsyncCausalityTracerStatics
	{
		void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext);

		void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status);

		void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation);

		void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityTraceLevel
	{
		Required = 0,
		Important = 1,
		Verbose = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySource
	{
		Application = 0,
		Library = 1,
		System = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityRelation
	{
		AssignDelegate = 0,
		Join = 1,
		Choice = 2,
		Cancel = 3,
		Error = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySynchronousWork
	{
		CompletionNotification = 0,
		ProgressNotification = 1,
		Execution = 2,
	}
}

namespace Windows.Foundation.Metadata
{
	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LengthIsAttribute : global::System.Attribute
	{
		public LengthIsAttribute(int indexLengthParameter)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.LengthIsAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DefaultOverloadAttribute : global::System.Attribute
	{
		public DefaultOverloadAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DefaultOverloadAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class OverloadAttribute : global::System.Attribute
	{
		public OverloadAttribute(string method)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.OverloadAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContractVersionAttribute : global::System.Attribute
	{
		public ContractVersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					global::System.Type contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					string contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WebHostHiddenAttribute : global::System.Attribute
	{
		public WebHostHiddenAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.WebHostHiddenAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GuidAttribute : global::System.Attribute
	{
		public GuidAttribute(
					uint a, 
					ushort b, 
					ushort c, 
					byte d, 
					byte e, 
					byte f, 
					byte g, 
					byte h, 
					byte i, 
					byte j, 
					byte k)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.GuidAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExclusiveToAttribute : global::System.Attribute
	{
		public ExclusiveToAttribute(global::System.Type typeName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ExclusiveToAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComposableAttribute : global::System.Attribute
	{
		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadingAttribute : global::System.Attribute
	{
		public ThreadingAttribute(global::Windows.Foundation.Metadata.ThreadingModel model)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ThreadingAttribute\'.  Windows Runtime attribute types are not" +
					" constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MarshalingBehaviorAttribute : global::System.Attribute
	{
		public MarshalingBehaviorAttribute(global::Windows.Foundation.Metadata.MarshalingType behavior)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MarshalingBehaviorAttribute\'.  Windows Runtime attribute type" +
					"s are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StaticAttribute : global::System.Attribute
	{
		public StaticAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ActivatableAttribute : global::System.Attribute
	{
		public ActivatableAttribute(
					uint version, 
					string type)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MuseAttribute : global::System.Attribute
	{
		public MuseAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MuseAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
		public uint Version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AllowMultipleAttribute : global::System.Attribute
	{
		public AllowMultipleAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AllowMultipleAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiContractAttribute : global::System.Attribute
	{
		public ApiContractAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ApiContractAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AttributeNameAttribute : global::System.Attribute
	{
		public AttributeNameAttribute(string A_0)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AttributeNameAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RemoteAsyncAttribute : global::System.Attribute
	{
		public RemoteAsyncAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.RemoteAsyncAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DualApiPartitionAttribute : global::System.Attribute
	{
		public DualApiPartitionAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DualApiPartitionAttribute\'.  Windows Runtime attribute types " +
					"are not constructable.");
		}
		public uint version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DeprecatedAttribute : global::System.Attribute
	{
		public DeprecatedAttribute(
					string message, 
					global::Windows.Foundation.Metadata.DeprecationType type, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DeprecatedAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CompositionType
	{
		Protected = 1,
		Public = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThreadingModel
	{
		InvalidThreading = 0,
		STA = 1,
		MTA = 2,
		Both = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum MarshalingType
	{
		InvalidMarshaling = 0,
		None = 1,
		Agile = 2,
		Standard = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum DeprecationType
	{
		Deprecate = 0,
		Remove = 1,
	}
}

namespace Windows.Globalization
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ICalendar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Calendar : global::System.__ComObject, global::Windows.Globalization.ICalendar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Calendar()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Globalization.Calendar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public void ChangeCalendarSystem(string value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.ChangeCalendarSystem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::System.DateTimeOffset GetDateTime()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.GetDateTime(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		public int get_LastEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_LastEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		public void put_Era(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Era(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public string EraAsString()
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string EraAsString(int idealLength)
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(
								this, 
								idealLength
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		public int get_FirstYearInThisEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstYearInThisEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		public int get_FirstMonthInThisYear()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstMonthInThisYear(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		public void put_Month(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Month(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		public int get_FirstDayInThisMonth()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstDayInThisMonth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		public int get_Day()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_Day(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		public void put_Day(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Day(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Calendar(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ILanguage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Language : global::System.__ComObject, global::Windows.Globalization.ILanguage
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Language(string languageTag)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
								"Windows.Globalization.Language", 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
					string typeName, 
					string languageTag)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.ILanguageFactory__Impl.Stubs.CreateLanguage(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.ILanguageFactory).TypeHandle
												), 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.ILanguage__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Language(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.IGeographicRegion))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GeographicRegion : global::System.__ComObject, global::Windows.Globalization.IGeographicRegion
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GeographicRegion(string geographicRegionCode)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
								"Windows.Globalization.GeographicRegion", 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
					string typeName, 
					string geographicRegionCode)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.IGeographicRegionFactory__Impl.Stubs.CreateGeographicRegion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.IGeographicRegionFactory).TypeHandle
												), 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.IGeographicRegion__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public GeographicRegion(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CalendarIdentifiers : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		public static string get_Gregorian()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Gregorian(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		public static string get_Hijri()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Hijri(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		public static string get_Japanese()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Japanese(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CalendarIdentifiers(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendar
	{
		void ChangeCalendarSystem(string value);

		global::System.DateTimeOffset GetDateTime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		int get_LastEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		void put_Era(int value);

		string EraAsString();

		string EraAsString(int idealLength);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		int get_FirstYearInThisEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		int get_FirstMonthInThisYear();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		void put_Month(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		int get_FirstDayInThisMonth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		int get_Day();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		void put_Day(int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguageFactory
	{
		global::System.IntPtr CreateLanguage(string languageTag);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegionFactory
	{
		global::System.IntPtr CreateGeographicRegion(string geographicRegionCode);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegion
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendarIdentifiersStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		string get_Gregorian();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		string get_Hijri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		string get_Japanese();
	}
}

namespace Windows.Storage
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFolder : global::System.__ComObject, global::Windows.Storage.IStorageFolder, global::Windows.Storage.IStorageItem, global::Windows.Storage.Search.IStorageFolderQueryOperations, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageFolder2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFolder3
	{
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFileAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFolderAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFilesAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFoldersAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemsAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StorageFolder(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFile))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFile : global::System.__ComObject, global::Windows.Storage.IStorageFile, global::Windows.Storage.Streams.IInputStreamReference, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.IStorageItem, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFilePropertiesWithAvailability, global::Windows.Storage.IStorageFile2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		public string get_FileType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_FileType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		public string get_ContentType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_ContentType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenAsync(
								this, 
								accessMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenTransactedWriteAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StorageFile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageStreamTransaction))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.IDisposable))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageStreamTransaction : global::System.__ComObject, global::Windows.Storage.IStorageStreamTransaction, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public StorageStreamTransaction(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder : global::Windows.Storage.IStorageItem
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile : global::Windows.Storage.IStorageItem, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.Streams.IInputStreamReference
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		string get_FileType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		string get_ContentType();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);

		global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageStreamTransaction : global::System.IDisposable
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties2 : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem2 : global::Windows.Storage.IStorageItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemPropertiesWithProvider : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFilePropertiesWithAvailability
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder3
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FileAccessMode
	{
		Read = 0,
		ReadWrite = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NameCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CreationCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
		OpenIfExists = 3,
	}
}

namespace Windows.Storage.Search
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderQueryOperations
	{
	}
}

namespace Windows.Storage.Streams
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStream : global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.Streams.IOutputStream
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		ulong get_Size();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		void put_Size(ulong value);

		global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position);

		global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		ulong get_Position();

		void Seek(ulong position);

		global::Windows.Storage.Streams.IRandomAccessStream CloneStream();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		bool get_CanRead();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		bool get_CanWrite();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBuffer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Capacity")]
		uint get_Capacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		uint get_Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Length")]
		void put_Length(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IOutputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer);

		global::Windows.Foundation.IAsyncOperation<bool> FlushAsync();
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InputStreamOptions : uint
	{
		None = 0x0u,
		Partial = 0x1u,
		ReadAhead = 0x2u,
	}
}

namespace Windows.UI
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.IColors))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Colors : global::System.__ComObject, global::Windows.UI.IColors
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AliceBlue")]
		public static global::Windows.UI.Color get_AliceBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_AliceBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_AliceBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_AliceBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AntiqueWhite")]
		public static global::Windows.UI.Color get_AntiqueWhite()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_AntiqueWhite("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_AntiqueWhite(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_AntiqueWhite(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Aqua")]
		public static global::Windows.UI.Color get_Aqua()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Aqua("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Aqua(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Aqua(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Aquamarine")]
		public static global::Windows.UI.Color get_Aquamarine()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Aquamarine("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Aquamarine(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Aquamarine(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Azure")]
		public static global::Windows.UI.Color get_Azure()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Azure("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Azure(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Azure(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Beige")]
		public static global::Windows.UI.Color get_Beige()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Beige("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Beige(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Beige(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bisque")]
		public static global::Windows.UI.Color get_Bisque()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Bisque("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Bisque(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Bisque(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Black")]
		public static global::Windows.UI.Color get_Black()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Black("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Black(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Black(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BlanchedAlmond")]
		public static global::Windows.UI.Color get_BlanchedAlmond()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_BlanchedAlmond("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_BlanchedAlmond(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_BlanchedAlmond(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Blue")]
		public static global::Windows.UI.Color get_Blue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Blue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Blue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Blue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BlueViolet")]
		public static global::Windows.UI.Color get_BlueViolet()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_BlueViolet("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_BlueViolet(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_BlueViolet(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Brown")]
		public static global::Windows.UI.Color get_Brown()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Brown("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Brown(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Brown(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BurlyWood")]
		public static global::Windows.UI.Color get_BurlyWood()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_BurlyWood("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_BurlyWood(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_BurlyWood(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CadetBlue")]
		public static global::Windows.UI.Color get_CadetBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_CadetBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_CadetBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_CadetBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Chartreuse")]
		public static global::Windows.UI.Color get_Chartreuse()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Chartreuse("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Chartreuse(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Chartreuse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Chocolate")]
		public static global::Windows.UI.Color get_Chocolate()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Chocolate("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Chocolate(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Chocolate(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Coral")]
		public static global::Windows.UI.Color get_Coral()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Coral("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Coral(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Coral(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornflowerBlue")]
		public static global::Windows.UI.Color get_CornflowerBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_CornflowerBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_CornflowerBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_CornflowerBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cornsilk")]
		public static global::Windows.UI.Color get_Cornsilk()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Cornsilk("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Cornsilk(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Cornsilk(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Crimson")]
		public static global::Windows.UI.Color get_Crimson()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Crimson("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Crimson(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Crimson(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cyan")]
		public static global::Windows.UI.Color get_Cyan()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Cyan("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Cyan(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Cyan(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkBlue")]
		public static global::Windows.UI.Color get_DarkBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkCyan")]
		public static global::Windows.UI.Color get_DarkCyan()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkCyan("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkCyan(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkCyan(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGoldenrod")]
		public static global::Windows.UI.Color get_DarkGoldenrod()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkGoldenrod("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkGoldenrod(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkGoldenrod(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGray")]
		public static global::Windows.UI.Color get_DarkGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGreen")]
		public static global::Windows.UI.Color get_DarkGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkKhaki")]
		public static global::Windows.UI.Color get_DarkKhaki()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkKhaki("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkKhaki(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkKhaki(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkMagenta")]
		public static global::Windows.UI.Color get_DarkMagenta()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkMagenta("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkMagenta(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkMagenta(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOliveGreen")]
		public static global::Windows.UI.Color get_DarkOliveGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkOliveGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkOliveGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkOliveGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOrange")]
		public static global::Windows.UI.Color get_DarkOrange()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkOrange("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkOrange(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkOrange(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOrchid")]
		public static global::Windows.UI.Color get_DarkOrchid()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkOrchid("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkOrchid(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkOrchid(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkRed")]
		public static global::Windows.UI.Color get_DarkRed()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkRed("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkRed(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkRed(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSalmon")]
		public static global::Windows.UI.Color get_DarkSalmon()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkSalmon("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkSalmon(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkSalmon(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSeaGreen")]
		public static global::Windows.UI.Color get_DarkSeaGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkSeaGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkSeaGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkSeaGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSlateBlue")]
		public static global::Windows.UI.Color get_DarkSlateBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkSlateBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkSlateBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkSlateBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSlateGray")]
		public static global::Windows.UI.Color get_DarkSlateGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkSlateGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkSlateGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkSlateGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkTurquoise")]
		public static global::Windows.UI.Color get_DarkTurquoise()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkTurquoise("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkTurquoise(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkTurquoise(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkViolet")]
		public static global::Windows.UI.Color get_DarkViolet()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DarkViolet("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DarkViolet(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DarkViolet(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DeepPink")]
		public static global::Windows.UI.Color get_DeepPink()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DeepPink("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DeepPink(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DeepPink(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DeepSkyBlue")]
		public static global::Windows.UI.Color get_DeepSkyBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DeepSkyBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DeepSkyBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DeepSkyBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DimGray")]
		public static global::Windows.UI.Color get_DimGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DimGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DimGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DimGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DodgerBlue")]
		public static global::Windows.UI.Color get_DodgerBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_DodgerBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_DodgerBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_DodgerBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Firebrick")]
		public static global::Windows.UI.Color get_Firebrick()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Firebrick("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Firebrick(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Firebrick(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FloralWhite")]
		public static global::Windows.UI.Color get_FloralWhite()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_FloralWhite("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_FloralWhite(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_FloralWhite(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForestGreen")]
		public static global::Windows.UI.Color get_ForestGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_ForestGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_ForestGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_ForestGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Fuchsia")]
		public static global::Windows.UI.Color get_Fuchsia()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Fuchsia("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Fuchsia(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Fuchsia(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gainsboro")]
		public static global::Windows.UI.Color get_Gainsboro()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Gainsboro("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Gainsboro(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Gainsboro(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GhostWhite")]
		public static global::Windows.UI.Color get_GhostWhite()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_GhostWhite("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_GhostWhite(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_GhostWhite(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gold")]
		public static global::Windows.UI.Color get_Gold()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Gold("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Gold(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Gold(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Goldenrod")]
		public static global::Windows.UI.Color get_Goldenrod()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Goldenrod("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Goldenrod(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Goldenrod(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gray")]
		public static global::Windows.UI.Color get_Gray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Gray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Gray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Gray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Green")]
		public static global::Windows.UI.Color get_Green()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Green("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Green(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Green(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GreenYellow")]
		public static global::Windows.UI.Color get_GreenYellow()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_GreenYellow("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_GreenYellow(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_GreenYellow(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Honeydew")]
		public static global::Windows.UI.Color get_Honeydew()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Honeydew("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Honeydew(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Honeydew(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HotPink")]
		public static global::Windows.UI.Color get_HotPink()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_HotPink("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_HotPink(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_HotPink(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndianRed")]
		public static global::Windows.UI.Color get_IndianRed()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_IndianRed("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_IndianRed(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_IndianRed(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Indigo")]
		public static global::Windows.UI.Color get_Indigo()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Indigo("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Indigo(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Indigo(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Ivory")]
		public static global::Windows.UI.Color get_Ivory()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Ivory("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Ivory(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Ivory(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Khaki")]
		public static global::Windows.UI.Color get_Khaki()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Khaki("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Khaki(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Khaki(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Lavender")]
		public static global::Windows.UI.Color get_Lavender()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Lavender("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Lavender(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Lavender(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LavenderBlush")]
		public static global::Windows.UI.Color get_LavenderBlush()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LavenderBlush("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LavenderBlush(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LavenderBlush(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LawnGreen")]
		public static global::Windows.UI.Color get_LawnGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LawnGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LawnGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LawnGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LemonChiffon")]
		public static global::Windows.UI.Color get_LemonChiffon()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LemonChiffon("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LemonChiffon(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LemonChiffon(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightBlue")]
		public static global::Windows.UI.Color get_LightBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightCoral")]
		public static global::Windows.UI.Color get_LightCoral()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightCoral("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightCoral(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightCoral(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightCyan")]
		public static global::Windows.UI.Color get_LightCyan()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightCyan("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightCyan(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightCyan(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGoldenrodYellow")]
		public static global::Windows.UI.Color get_LightGoldenrodYellow()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightGoldenrodYellow("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightGoldenrodYellow(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightGoldenrodYellow(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGreen")]
		public static global::Windows.UI.Color get_LightGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGray")]
		public static global::Windows.UI.Color get_LightGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightPink")]
		public static global::Windows.UI.Color get_LightPink()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightPink("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightPink(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightPink(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSalmon")]
		public static global::Windows.UI.Color get_LightSalmon()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightSalmon("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightSalmon(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightSalmon(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSeaGreen")]
		public static global::Windows.UI.Color get_LightSeaGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightSeaGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightSeaGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightSeaGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSkyBlue")]
		public static global::Windows.UI.Color get_LightSkyBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightSkyBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightSkyBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightSkyBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSlateGray")]
		public static global::Windows.UI.Color get_LightSlateGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightSlateGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightSlateGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightSlateGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSteelBlue")]
		public static global::Windows.UI.Color get_LightSteelBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightSteelBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightSteelBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightSteelBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightYellow")]
		public static global::Windows.UI.Color get_LightYellow()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LightYellow("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LightYellow(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LightYellow(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Lime")]
		public static global::Windows.UI.Color get_Lime()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Lime("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Lime(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Lime(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LimeGreen")]
		public static global::Windows.UI.Color get_LimeGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_LimeGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_LimeGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_LimeGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Linen")]
		public static global::Windows.UI.Color get_Linen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Linen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Linen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Linen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Magenta")]
		public static global::Windows.UI.Color get_Magenta()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Magenta("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Magenta(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Magenta(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maroon")]
		public static global::Windows.UI.Color get_Maroon()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Maroon("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Maroon(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Maroon(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumAquamarine")]
		public static global::Windows.UI.Color get_MediumAquamarine()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumAquamarine("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumAquamarine(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumAquamarine(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumBlue")]
		public static global::Windows.UI.Color get_MediumBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumOrchid")]
		public static global::Windows.UI.Color get_MediumOrchid()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumOrchid("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumOrchid(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumOrchid(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumPurple")]
		public static global::Windows.UI.Color get_MediumPurple()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumPurple("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumPurple(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumPurple(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSeaGreen")]
		public static global::Windows.UI.Color get_MediumSeaGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumSeaGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumSeaGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumSeaGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSlateBlue")]
		public static global::Windows.UI.Color get_MediumSlateBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumSlateBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumSlateBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumSlateBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSpringGreen")]
		public static global::Windows.UI.Color get_MediumSpringGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumSpringGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumSpringGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumSpringGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumTurquoise")]
		public static global::Windows.UI.Color get_MediumTurquoise()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumTurquoise("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumTurquoise(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumTurquoise(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumVioletRed")]
		public static global::Windows.UI.Color get_MediumVioletRed()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MediumVioletRed("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MediumVioletRed(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MediumVioletRed(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MidnightBlue")]
		public static global::Windows.UI.Color get_MidnightBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MidnightBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MidnightBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MidnightBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MintCream")]
		public static global::Windows.UI.Color get_MintCream()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MintCream("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MintCream(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MintCream(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MistyRose")]
		public static global::Windows.UI.Color get_MistyRose()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_MistyRose("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_MistyRose(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_MistyRose(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Moccasin")]
		public static global::Windows.UI.Color get_Moccasin()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Moccasin("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Moccasin(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Moccasin(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavajoWhite")]
		public static global::Windows.UI.Color get_NavajoWhite()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_NavajoWhite("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_NavajoWhite(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_NavajoWhite(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Navy")]
		public static global::Windows.UI.Color get_Navy()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Navy("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Navy(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Navy(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldLace")]
		public static global::Windows.UI.Color get_OldLace()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_OldLace("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_OldLace(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_OldLace(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Olive")]
		public static global::Windows.UI.Color get_Olive()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Olive("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Olive(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Olive(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OliveDrab")]
		public static global::Windows.UI.Color get_OliveDrab()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_OliveDrab("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_OliveDrab(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_OliveDrab(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orange")]
		public static global::Windows.UI.Color get_Orange()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Orange("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Orange(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Orange(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrangeRed")]
		public static global::Windows.UI.Color get_OrangeRed()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_OrangeRed("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_OrangeRed(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_OrangeRed(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orchid")]
		public static global::Windows.UI.Color get_Orchid()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Orchid("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Orchid(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Orchid(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleGoldenrod")]
		public static global::Windows.UI.Color get_PaleGoldenrod()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PaleGoldenrod("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PaleGoldenrod(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PaleGoldenrod(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleGreen")]
		public static global::Windows.UI.Color get_PaleGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PaleGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PaleGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PaleGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleTurquoise")]
		public static global::Windows.UI.Color get_PaleTurquoise()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PaleTurquoise("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PaleTurquoise(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PaleTurquoise(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleVioletRed")]
		public static global::Windows.UI.Color get_PaleVioletRed()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PaleVioletRed("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PaleVioletRed(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PaleVioletRed(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PapayaWhip")]
		public static global::Windows.UI.Color get_PapayaWhip()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PapayaWhip("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PapayaWhip(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PapayaWhip(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PeachPuff")]
		public static global::Windows.UI.Color get_PeachPuff()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PeachPuff("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PeachPuff(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PeachPuff(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Peru")]
		public static global::Windows.UI.Color get_Peru()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Peru("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Peru(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Peru(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pink")]
		public static global::Windows.UI.Color get_Pink()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Pink("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Pink(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Pink(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Plum")]
		public static global::Windows.UI.Color get_Plum()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Plum("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Plum(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Plum(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PowderBlue")]
		public static global::Windows.UI.Color get_PowderBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_PowderBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_PowderBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_PowderBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Purple")]
		public static global::Windows.UI.Color get_Purple()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Purple("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Purple(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Purple(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Red")]
		public static global::Windows.UI.Color get_Red()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Red("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Red(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Red(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RosyBrown")]
		public static global::Windows.UI.Color get_RosyBrown()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_RosyBrown("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_RosyBrown(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_RosyBrown(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RoyalBlue")]
		public static global::Windows.UI.Color get_RoyalBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_RoyalBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_RoyalBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_RoyalBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SaddleBrown")]
		public static global::Windows.UI.Color get_SaddleBrown()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SaddleBrown("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SaddleBrown(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SaddleBrown(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Salmon")]
		public static global::Windows.UI.Color get_Salmon()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Salmon("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Salmon(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Salmon(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SandyBrown")]
		public static global::Windows.UI.Color get_SandyBrown()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SandyBrown("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SandyBrown(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SandyBrown(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeaGreen")]
		public static global::Windows.UI.Color get_SeaGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SeaGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SeaGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SeaGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeaShell")]
		public static global::Windows.UI.Color get_SeaShell()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SeaShell("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SeaShell(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SeaShell(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Sienna")]
		public static global::Windows.UI.Color get_Sienna()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Sienna("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Sienna(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Sienna(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Silver")]
		public static global::Windows.UI.Color get_Silver()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Silver("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Silver(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Silver(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SkyBlue")]
		public static global::Windows.UI.Color get_SkyBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SkyBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SkyBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SkyBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SlateBlue")]
		public static global::Windows.UI.Color get_SlateBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SlateBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SlateBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SlateBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SlateGray")]
		public static global::Windows.UI.Color get_SlateGray()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SlateGray("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SlateGray(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SlateGray(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Snow")]
		public static global::Windows.UI.Color get_Snow()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Snow("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Snow(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Snow(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpringGreen")]
		public static global::Windows.UI.Color get_SpringGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SpringGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SpringGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SpringGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SteelBlue")]
		public static global::Windows.UI.Color get_SteelBlue()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_SteelBlue("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_SteelBlue(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_SteelBlue(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tan")]
		public static global::Windows.UI.Color get_Tan()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Tan("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Tan(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Tan(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Teal")]
		public static global::Windows.UI.Color get_Teal()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Teal("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Teal(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Teal(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Thistle")]
		public static global::Windows.UI.Color get_Thistle()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Thistle("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Thistle(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Thistle(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tomato")]
		public static global::Windows.UI.Color get_Tomato()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Tomato("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Tomato(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Tomato(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Transparent")]
		public static global::Windows.UI.Color get_Transparent()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Transparent("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Transparent(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Transparent(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Turquoise")]
		public static global::Windows.UI.Color get_Turquoise()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Turquoise("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Turquoise(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Turquoise(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Violet")]
		public static global::Windows.UI.Color get_Violet()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Violet("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Violet(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Violet(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Wheat")]
		public static global::Windows.UI.Color get_Wheat()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Wheat("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Wheat(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Wheat(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "White")]
		public static global::Windows.UI.Color get_White()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_White("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_White(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_White(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WhiteSmoke")]
		public static global::Windows.UI.Color get_WhiteSmoke()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_WhiteSmoke("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_WhiteSmoke(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_WhiteSmoke(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Yellow")]
		public static global::Windows.UI.Color get_Yellow()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_Yellow("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_Yellow(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_Yellow(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "YellowGreen")]
		public static global::Windows.UI.Color get_YellowGreen()
		{
			global::Windows.UI.Color retval;
			retval = __Factory_Windows_UI__IColorsStatics_get_YellowGreen("Windows.UI.Colors");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Color __Factory_Windows_UI__IColorsStatics_get_YellowGreen(string typeName)
		{
			global::Windows.UI.Color __pRetVal;
			__pRetVal = global::Windows.UI.IColorsStatics__Impl.Stubs.get_YellowGreen(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.IColorsStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Colors(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColorsStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AliceBlue")]
		global::Windows.UI.Color get_AliceBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AntiqueWhite")]
		global::Windows.UI.Color get_AntiqueWhite();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Aqua")]
		global::Windows.UI.Color get_Aqua();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Aquamarine")]
		global::Windows.UI.Color get_Aquamarine();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Azure")]
		global::Windows.UI.Color get_Azure();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Beige")]
		global::Windows.UI.Color get_Beige();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Bisque")]
		global::Windows.UI.Color get_Bisque();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Black")]
		global::Windows.UI.Color get_Black();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BlanchedAlmond")]
		global::Windows.UI.Color get_BlanchedAlmond();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Blue")]
		global::Windows.UI.Color get_Blue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BlueViolet")]
		global::Windows.UI.Color get_BlueViolet();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Brown")]
		global::Windows.UI.Color get_Brown();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BurlyWood")]
		global::Windows.UI.Color get_BurlyWood();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CadetBlue")]
		global::Windows.UI.Color get_CadetBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Chartreuse")]
		global::Windows.UI.Color get_Chartreuse();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Chocolate")]
		global::Windows.UI.Color get_Chocolate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Coral")]
		global::Windows.UI.Color get_Coral();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CornflowerBlue")]
		global::Windows.UI.Color get_CornflowerBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cornsilk")]
		global::Windows.UI.Color get_Cornsilk();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Crimson")]
		global::Windows.UI.Color get_Crimson();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Cyan")]
		global::Windows.UI.Color get_Cyan();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkBlue")]
		global::Windows.UI.Color get_DarkBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkCyan")]
		global::Windows.UI.Color get_DarkCyan();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGoldenrod")]
		global::Windows.UI.Color get_DarkGoldenrod();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGray")]
		global::Windows.UI.Color get_DarkGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkGreen")]
		global::Windows.UI.Color get_DarkGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkKhaki")]
		global::Windows.UI.Color get_DarkKhaki();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkMagenta")]
		global::Windows.UI.Color get_DarkMagenta();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOliveGreen")]
		global::Windows.UI.Color get_DarkOliveGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOrange")]
		global::Windows.UI.Color get_DarkOrange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkOrchid")]
		global::Windows.UI.Color get_DarkOrchid();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkRed")]
		global::Windows.UI.Color get_DarkRed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSalmon")]
		global::Windows.UI.Color get_DarkSalmon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSeaGreen")]
		global::Windows.UI.Color get_DarkSeaGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSlateBlue")]
		global::Windows.UI.Color get_DarkSlateBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkSlateGray")]
		global::Windows.UI.Color get_DarkSlateGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkTurquoise")]
		global::Windows.UI.Color get_DarkTurquoise();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DarkViolet")]
		global::Windows.UI.Color get_DarkViolet();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DeepPink")]
		global::Windows.UI.Color get_DeepPink();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DeepSkyBlue")]
		global::Windows.UI.Color get_DeepSkyBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DimGray")]
		global::Windows.UI.Color get_DimGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DodgerBlue")]
		global::Windows.UI.Color get_DodgerBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Firebrick")]
		global::Windows.UI.Color get_Firebrick();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FloralWhite")]
		global::Windows.UI.Color get_FloralWhite();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ForestGreen")]
		global::Windows.UI.Color get_ForestGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Fuchsia")]
		global::Windows.UI.Color get_Fuchsia();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gainsboro")]
		global::Windows.UI.Color get_Gainsboro();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GhostWhite")]
		global::Windows.UI.Color get_GhostWhite();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gold")]
		global::Windows.UI.Color get_Gold();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Goldenrod")]
		global::Windows.UI.Color get_Goldenrod();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gray")]
		global::Windows.UI.Color get_Gray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Green")]
		global::Windows.UI.Color get_Green();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "GreenYellow")]
		global::Windows.UI.Color get_GreenYellow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Honeydew")]
		global::Windows.UI.Color get_Honeydew();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HotPink")]
		global::Windows.UI.Color get_HotPink();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IndianRed")]
		global::Windows.UI.Color get_IndianRed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Indigo")]
		global::Windows.UI.Color get_Indigo();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Ivory")]
		global::Windows.UI.Color get_Ivory();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Khaki")]
		global::Windows.UI.Color get_Khaki();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Lavender")]
		global::Windows.UI.Color get_Lavender();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LavenderBlush")]
		global::Windows.UI.Color get_LavenderBlush();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LawnGreen")]
		global::Windows.UI.Color get_LawnGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LemonChiffon")]
		global::Windows.UI.Color get_LemonChiffon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightBlue")]
		global::Windows.UI.Color get_LightBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightCoral")]
		global::Windows.UI.Color get_LightCoral();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightCyan")]
		global::Windows.UI.Color get_LightCyan();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGoldenrodYellow")]
		global::Windows.UI.Color get_LightGoldenrodYellow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGreen")]
		global::Windows.UI.Color get_LightGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightGray")]
		global::Windows.UI.Color get_LightGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightPink")]
		global::Windows.UI.Color get_LightPink();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSalmon")]
		global::Windows.UI.Color get_LightSalmon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSeaGreen")]
		global::Windows.UI.Color get_LightSeaGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSkyBlue")]
		global::Windows.UI.Color get_LightSkyBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSlateGray")]
		global::Windows.UI.Color get_LightSlateGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightSteelBlue")]
		global::Windows.UI.Color get_LightSteelBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LightYellow")]
		global::Windows.UI.Color get_LightYellow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Lime")]
		global::Windows.UI.Color get_Lime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LimeGreen")]
		global::Windows.UI.Color get_LimeGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Linen")]
		global::Windows.UI.Color get_Linen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Magenta")]
		global::Windows.UI.Color get_Magenta();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Maroon")]
		global::Windows.UI.Color get_Maroon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumAquamarine")]
		global::Windows.UI.Color get_MediumAquamarine();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumBlue")]
		global::Windows.UI.Color get_MediumBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumOrchid")]
		global::Windows.UI.Color get_MediumOrchid();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumPurple")]
		global::Windows.UI.Color get_MediumPurple();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSeaGreen")]
		global::Windows.UI.Color get_MediumSeaGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSlateBlue")]
		global::Windows.UI.Color get_MediumSlateBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumSpringGreen")]
		global::Windows.UI.Color get_MediumSpringGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumTurquoise")]
		global::Windows.UI.Color get_MediumTurquoise();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MediumVioletRed")]
		global::Windows.UI.Color get_MediumVioletRed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MidnightBlue")]
		global::Windows.UI.Color get_MidnightBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MintCream")]
		global::Windows.UI.Color get_MintCream();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MistyRose")]
		global::Windows.UI.Color get_MistyRose();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Moccasin")]
		global::Windows.UI.Color get_Moccasin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NavajoWhite")]
		global::Windows.UI.Color get_NavajoWhite();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Navy")]
		global::Windows.UI.Color get_Navy();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldLace")]
		global::Windows.UI.Color get_OldLace();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Olive")]
		global::Windows.UI.Color get_Olive();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OliveDrab")]
		global::Windows.UI.Color get_OliveDrab();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orange")]
		global::Windows.UI.Color get_Orange();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OrangeRed")]
		global::Windows.UI.Color get_OrangeRed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Orchid")]
		global::Windows.UI.Color get_Orchid();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleGoldenrod")]
		global::Windows.UI.Color get_PaleGoldenrod();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleGreen")]
		global::Windows.UI.Color get_PaleGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleTurquoise")]
		global::Windows.UI.Color get_PaleTurquoise();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PaleVioletRed")]
		global::Windows.UI.Color get_PaleVioletRed();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PapayaWhip")]
		global::Windows.UI.Color get_PapayaWhip();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PeachPuff")]
		global::Windows.UI.Color get_PeachPuff();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Peru")]
		global::Windows.UI.Color get_Peru();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Pink")]
		global::Windows.UI.Color get_Pink();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Plum")]
		global::Windows.UI.Color get_Plum();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PowderBlue")]
		global::Windows.UI.Color get_PowderBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Purple")]
		global::Windows.UI.Color get_Purple();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Red")]
		global::Windows.UI.Color get_Red();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RosyBrown")]
		global::Windows.UI.Color get_RosyBrown();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RoyalBlue")]
		global::Windows.UI.Color get_RoyalBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SaddleBrown")]
		global::Windows.UI.Color get_SaddleBrown();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Salmon")]
		global::Windows.UI.Color get_Salmon();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SandyBrown")]
		global::Windows.UI.Color get_SandyBrown();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeaGreen")]
		global::Windows.UI.Color get_SeaGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SeaShell")]
		global::Windows.UI.Color get_SeaShell();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Sienna")]
		global::Windows.UI.Color get_Sienna();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Silver")]
		global::Windows.UI.Color get_Silver();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SkyBlue")]
		global::Windows.UI.Color get_SkyBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SlateBlue")]
		global::Windows.UI.Color get_SlateBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SlateGray")]
		global::Windows.UI.Color get_SlateGray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Snow")]
		global::Windows.UI.Color get_Snow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SpringGreen")]
		global::Windows.UI.Color get_SpringGreen();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SteelBlue")]
		global::Windows.UI.Color get_SteelBlue();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tan")]
		global::Windows.UI.Color get_Tan();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Teal")]
		global::Windows.UI.Color get_Teal();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Thistle")]
		global::Windows.UI.Color get_Thistle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Tomato")]
		global::Windows.UI.Color get_Tomato();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Transparent")]
		global::Windows.UI.Color get_Transparent();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Turquoise")]
		global::Windows.UI.Color get_Turquoise();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Violet")]
		global::Windows.UI.Color get_Violet();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Wheat")]
		global::Windows.UI.Color get_Wheat();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "White")]
		global::Windows.UI.Color get_White();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WhiteSmoke")]
		global::Windows.UI.Color get_WhiteSmoke();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Yellow")]
		global::Windows.UI.Color get_Yellow();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "YellowGreen")]
		global::Windows.UI.Color get_YellowGreen();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IColors
	{
	}
}

namespace Windows.UI.Composition
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositionObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CompositionObject : global::System.__ComObject, global::Windows.UI.Composition.ICompositionObject, global::System.IDisposable, global::Windows.UI.Composition.IAnimationObject
	{
		public virtual void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public CompositionObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.IAnimationPropertyInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimationPropertyInfo : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.IAnimationPropertyInfo
	{
		public AnimationPropertyInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositionObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationPropertyInfo
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisualElement
	{
	}
}

namespace Windows.UI.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreDispatcher))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreDispatcher : global::System.__ComObject, global::Windows.UI.Core.ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		public bool get_HasThreadAccess()
		{
			bool __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.get_HasThreadAccess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.RunAsync(
								this, 
								priority, 
								agileCallback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreDispatcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindow : global::System.__ComObject, global::Windows.UI.Core.ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		public global::Windows.UI.Core.CoreDispatcher get_Dispatcher()
		{
			global::Windows.UI.Core.CoreDispatcher __retVal = global::Windows.UI.Core.ICoreWindow__Impl.Stubs.get_Dispatcher(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.UI.Core.CoreWindow GetForCurrentThread()
		{
			global::Windows.UI.Core.CoreWindow retval;
			retval = __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread("Windows.UI.Core.CoreWindow");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Core.CoreWindow __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread(string typeName)
		{
			global::Windows.UI.Core.CoreWindow __pRetVal;
			__pRetVal = global::Windows.UI.Core.ICoreWindowStatic__Impl.Stubs.GetForCurrentThread(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Core.ICoreWindowStatic).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreWindow(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowActivatedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowActivatedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindowEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindowEventArgs : global::System.__ComObject, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public CoreWindowEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowSizeChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowSizeChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowSizeChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisibilityChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IVisibilityChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public VisibilityChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		bool get_HasThreadAccess();

		global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DispatchedHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowStatic
	{
		global::Windows.UI.Core.CoreWindow GetForCurrentThread();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		global::Windows.UI.Core.CoreDispatcher get_Dispatcher();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowActivatedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowSizeChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisibilityChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CoreDispatcherPriority
	{
		Idle = -2,
		Low = -1,
		Normal = 0,
		High = 1,
	}
}

namespace Windows.UI.Xaml
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DependencyObject : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyObject, global::Windows.UI.Xaml.IDependencyObject2
	{
		public DependencyObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UIElement : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IUIElement, global::Windows.UI.Xaml.IUIElement2, global::Windows.UI.Xaml.IUIElement3, global::Windows.UI.Xaml.IUIElement4, global::Windows.UI.Xaml.IUIElement5, global::Windows.UI.Xaml.IUIElement7, global::Windows.UI.Xaml.IUIElement8, global::Windows.UI.Xaml.IUIElement9, global::Windows.UI.Xaml.IUIElement10, global::Windows.UI.Xaml.IUIElementOverrides, global::Windows.UI.Xaml.IUIElementOverrides7, global::Windows.UI.Xaml.IUIElementOverrides8, global::Windows.UI.Xaml.IUIElementOverrides9, global::Windows.UI.Composition.IAnimationObject, global::Windows.UI.Composition.IVisualElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		public virtual void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		public virtual void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_GotFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		public virtual void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_GotFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_LostFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		public virtual void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_LostFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragEnter(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		public virtual void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragEnter(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragLeave(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		public virtual void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragLeave(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragOver(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		public virtual void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragOver(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Drop(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		public virtual void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Drop(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerPressed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		public virtual void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerPressed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerMoved(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		public virtual void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerMoved(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerReleased(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		public virtual void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerReleased(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerEntered(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		public virtual void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerEntered(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerExited(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		public virtual void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerExited(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCaptureLost(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		public virtual void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCaptureLost(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		public virtual void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerWheelChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		public virtual void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerWheelChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Tapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		public virtual void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Tapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DoubleTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		public virtual void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DoubleTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Holding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		public virtual void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Holding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_RightTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		public virtual void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_RightTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		public virtual void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationInertiaStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		public virtual void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationInertiaStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		public virtual void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationDelta(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		public virtual void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationDelta(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		public virtual void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DragStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		public virtual void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DragStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DropCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		public virtual void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DropCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		public virtual void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		public virtual void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		public virtual void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayDismissed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		public virtual void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayDismissed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		public virtual void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_GettingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		public virtual void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_GettingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_LosingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		public virtual void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_LosingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_NoFocusCandidateFound(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		public virtual void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_NoFocusCandidateFound(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_CharacterReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		public virtual void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_CharacterReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_ProcessKeyboardAccelerators(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		public virtual void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_ProcessKeyboardAccelerators(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		public virtual void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		public virtual void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.add_BringIntoViewRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		public virtual void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.remove_BringIntoViewRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.OnCreateAutomationPeer();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnCreateAutomationPeer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren()
		{
			this.OnDisconnectVisualChildren();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDisconnectVisualChildren()
		{
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnDisconnectVisualChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> global::Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal_1 = this.FindSubElementsForTouchTargeting(
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.FindSubElementsForTouchTargeting(
								this, 
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> global::Windows.UI.Xaml.IUIElementOverrides7.GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal_1 = this.GetChildrenInTabFocusOrder();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal = global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.GetChildrenInTabFocusOrder(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			this.OnProcessKeyboardAccelerators(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.OnProcessKeyboardAccelerators(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			this.OnKeyboardAcceleratorInvoked(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnKeyboardAcceleratorInvoked(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			this.OnBringIntoViewRequested(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnBringIntoViewRequested(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.IUIElementOverrides9__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UIElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RoutedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IRoutedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RoutedEventArgs()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance("Windows.UI.Xaml.RoutedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.RoutedEventArgs).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RoutedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragEventArgs
	{
		public DragEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragStartingEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragStartingEventArgs
	{
		public DragStartingEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DropCompletedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDropCompletedEventArgs
	{
		public DropCompletedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BringIntoViewRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
	{
		public BringIntoViewRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementProtected7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkElement : global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.IFrameworkElement, global::Windows.UI.Xaml.IFrameworkElement2, global::Windows.UI.Xaml.IFrameworkElement3, global::Windows.UI.Xaml.IFrameworkElement6, global::Windows.UI.Xaml.IFrameworkElement7, global::Windows.UI.Xaml.IFrameworkElementProtected7, global::Windows.UI.Xaml.IFrameworkElementOverrides, global::Windows.UI.Xaml.IFrameworkElementOverrides2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected FrameworkElement() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance("Windows.UI.Xaml.FrameworkElement");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IFrameworkElementFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.IFrameworkElementFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IFrameworkElementFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		public virtual double get_Width()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Width(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		public virtual void put_Width(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Width(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		public virtual double get_Height()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Height(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		public virtual void put_Height(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Height(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHeight")]
		public virtual double get_MinHeight()
		{
			double __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_MinHeight(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHeight")]
		public virtual void put_MinHeight(double value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_MinHeight(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		public virtual global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment()
		{
			global::Windows.UI.Xaml.VerticalAlignment __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_VerticalAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		public virtual void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_VerticalAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		public virtual global::Windows.UI.Xaml.Thickness get_Margin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Margin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		public virtual void put_Margin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Margin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DataContext")]
		public virtual object get_DataContext()
		{
			object __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_DataContext(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Loaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		public virtual void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Loaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Unloaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		public virtual void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Unloaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public virtual void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_LayoutUpdated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		public virtual void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_LayoutUpdated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.add_DataContextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		public virtual void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.remove_DataContextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.add_Loading(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		public virtual void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.remove_Loading(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.add_ActualThemeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		public virtual void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.remove_ActualThemeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.add_EffectiveViewportChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		public virtual void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.remove_EffectiveViewportChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IFrameworkElementProtected7.InvalidateViewport()
		{
			this.InvalidateViewport();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InvalidateViewport()
		{
			global::Windows.UI.Xaml.IFrameworkElementProtected7__Impl.Stubs.InvalidateViewport(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(availableSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.MeasureOverride(
								this, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(finalSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate()
		{
			this.OnApplyTemplate();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnApplyTemplate()
		{
			global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.OnApplyTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		bool global::Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal_1 = this.GoToElementStateCore(
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides2__Impl.Stubs.GoToElementStateCore(
								this, 
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FrameworkElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SizeChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.ISizeChangedEventArgs
	{
		public SizeChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataContextChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDataContextChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewValue")]
		public object get_NewValue()
		{
			object __retVal = global::Windows.UI.Xaml.IDataContextChangedEventArgs__Impl.Stubs.get_NewValue(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public DataContextChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EffectiveViewportChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
	{
		public EffectiveViewportChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyPropertyChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
	{
		public DependencyPropertyChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkTemplate : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IFrameworkTemplate
	{
		public FrameworkTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.IDataTemplate
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public DataTemplate() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IDataTemplateFactory_CreateInstance("Windows.UI.Xaml.DataTemplate");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IDataTemplateFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.DataTemplate).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IDataTemplateFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IDataTemplateFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IDataTemplateFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IDataTemplateFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public static void SetExtensionInstance(
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::Windows.UI.Xaml.IDataTemplateExtension value)
		{
			__Factory_Windows_UI_Xaml__IDataTemplateStatics2_SetExtensionInstance(
								"Windows.UI.Xaml.DataTemplate", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IDataTemplateStatics2_SetExtensionInstance(
					string typeName, 
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::Windows.UI.Xaml.IDataTemplateExtension value)
		{
			global::Windows.UI.Xaml.IDataTemplateStatics2__Impl.Stubs.SetExtensionInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IDataTemplateStatics2).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public DataTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IStyle))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Style : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IStyle
	{
		public Style(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetterBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SetterBase : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.ISetterBase
	{
		public SetterBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyProperty))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyProperty : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyProperty
	{
		public DependencyProperty(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISetter))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Setter : global::Windows.UI.Xaml.SetterBase, global::Windows.UI.Xaml.ISetter
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Setter() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Setter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Property")]
		public global::Windows.UI.Xaml.DependencyProperty get_Property()
		{
			global::Windows.UI.Xaml.DependencyProperty __retVal = global::Windows.UI.Xaml.ISetter__Impl.Stubs.get_Property(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Property")]
		public void put_Property(global::Windows.UI.Xaml.DependencyProperty value)
		{
			global::Windows.UI.Xaml.ISetter__Impl.Stubs.put_Property(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		public object get_Value()
		{
			object __retVal = global::Windows.UI.Xaml.ISetter__Impl.Stubs.get_Value(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		public void put_Value(object value)
		{
			global::Windows.UI.Xaml.ISetter__Impl.Stubs.put_Value(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Setter(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Application : global::System.__ComObject, global::Windows.UI.Xaml.IApplication, global::Windows.UI.Xaml.IApplication2, global::Windows.UI.Xaml.IApplicationOverrides, global::Windows.UI.Xaml.IApplicationOverrides2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Application()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance("Windows.UI.Xaml.Application");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Application).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_UnhandledException(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		public virtual void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_UnhandledException(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Suspending(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		public virtual void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Suspending(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Resuming(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		public virtual void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Resuming(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_LeavingBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		public virtual void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_LeavingBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_EnteredBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		public virtual void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_EnteredBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			this.OnActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			this.OnLaunched(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnLaunched(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			this.OnFileActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			this.OnSearchActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnSearchActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			this.OnShareTargetActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnShareTargetActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			this.OnFileOpenPickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileOpenPickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			this.OnFileSavePickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileSavePickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			this.OnCachedFileUpdaterActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnCachedFileUpdaterActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			this.OnWindowCreated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnWindowCreated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides2.OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			this.OnBackgroundActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides2__Impl.Stubs.OnBackgroundActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_Start(
								"Windows.UI.Xaml.Application", 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_Start(
					string typeName, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.Start(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
								"Windows.UI.Xaml.Application", 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
					string typeName, 
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.LoadComponent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Application(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationInitializationCallbackParams : global::System.__ComObject, global::Windows.UI.Xaml.IApplicationInitializationCallbackParams
	{
		public ApplicationInitializationCallbackParams(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UnhandledExceptionEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IUnhandledExceptionEventArgs
	{
		public UnhandledExceptionEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowCreatedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IWindowCreatedEventArgs
	{
		public WindowCreatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Window : global::System.__ComObject, global::Windows.UI.Xaml.IWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Activated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		public void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Activated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_VisibilityChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		public void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_VisibilityChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Activate()
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.Activate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.UI.Xaml.Window get_Current()
		{
			global::Windows.UI.Xaml.Window retval;
			retval = __Factory_Windows_UI_Xaml__IWindowStatics_get_Current("Windows.UI.Xaml.Window");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Window __Factory_Windows_UI_Xaml__IWindowStatics_get_Current(string typeName)
		{
			global::Windows.UI.Xaml.Window __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IWindowStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.IWindowStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Window(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RoutedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.RoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DragEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBringIntoViewRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement10
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer();

		void OnDisconnectVisualChildren();

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides7
	{
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder();

		void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides8
	{
		void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args);

		void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides9
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Width")]
		double get_Width();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Width")]
		void put_Width(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Height")]
		double get_Height();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Height")]
		void put_Height(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MinHeight")]
		double get_MinHeight();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MinHeight")]
		void put_MinHeight(double value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		global::Windows.UI.Xaml.Thickness get_Margin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		void put_Margin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DataContext")]
		object get_DataContext();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.SizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISizeChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataContextChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewValue")]
		object get_NewValue();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEffectiveViewportChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementProtected7
	{
		void InvalidateViewport();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides
	{
		global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize);

		void OnApplyTemplate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides2
	{
		bool GoToElementStateCore(
					string stateName, 
					bool useTransitions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DependencyPropertyChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyPropertyChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateStatics2
	{
		void SetExtensionInstance(
					global::Windows.UI.Xaml.FrameworkElement element, 
					global::Windows.UI.Xaml.IDataTemplateExtension value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateExtension
	{
		void ResetTemplate();

		bool ProcessBinding(uint phase);

		int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs arg);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyle
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetterBase
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyProperty
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISetter
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Property")]
		global::Windows.UI.Xaml.DependencyProperty get_Property();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Property")]
		void put_Property(global::Windows.UI.Xaml.DependencyProperty value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Value")]
		object get_Value();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Value")]
		void put_Value(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationStatics
	{
		void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback);

		void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ApplicationInitializationCallback(global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationInitializationCallbackParams
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void UnhandledExceptionEventHandler(
				object sender, 
				global::Windows.UI.Xaml.UnhandledExceptionEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnhandledExceptionEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SuspendingEventHandler(
				object sender, 
				global::Windows.ApplicationModel.SuspendingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void LeavingBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.LeavingBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void EnteredBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.EnteredBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides
	{
		void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args);

		void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args);

		void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args);

		void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args);

		void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args);

		void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args);

		void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args);

		void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args);

		void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowCreatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides2
	{
		void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.UI.Xaml.Window get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Activate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowActivatedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowActivatedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowClosedEventHandler(
				object sender, 
				global::Windows.UI.Core.CoreWindowEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowSizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowSizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowVisibilityChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.VisibilityChangedEventArgs e);

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VerticalAlignment
	{
		Top = 0,
		Center = 1,
		Bottom = 2,
		Stretch = 3,
	}
}

namespace Windows.UI.Xaml.Automation.Peers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AutomationPeer : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer7, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer9, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.PeerFromProvider(provider);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.PeerFromProvider(
								this, 
								provider
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal_1 = this.ProviderFromPeer(peer);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.ProviderFromPeer(
								this, 
								peer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal_1 = this.GetPatternCore(patternInterface);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPatternCore(
								this, 
								patternInterface
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAcceleratorKeyCore()
		{
			string __retVal_1 = this.GetAcceleratorKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAcceleratorKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAcceleratorKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAccessKeyCore()
		{
			string __retVal_1 = this.GetAccessKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAccessKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAccessKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal_1 = this.GetAutomationControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationIdCore()
		{
			string __retVal_1 = this.GetAutomationIdCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAutomationIdCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationIdCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Rect global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal_1 = this.GetBoundingRectangleCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Rect GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetBoundingRectangleCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetChildrenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetChildrenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClassNameCore()
		{
			string __retVal_1 = this.GetClassNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetClassNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClassNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Point global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal_1 = this.GetClickablePointCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Point GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClickablePointCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetHelpTextCore()
		{
			string __retVal_1 = this.GetHelpTextCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetHelpTextCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetHelpTextCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemStatusCore()
		{
			string __retVal_1 = this.GetItemStatusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemStatusCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemStatusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemTypeCore()
		{
			string __retVal_1 = this.GetItemTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetLabeledByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLabeledByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLocalizedControlTypeCore()
		{
			string __retVal_1 = this.GetLocalizedControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedControlTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLocalizedControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetNameCore()
		{
			string __retVal_1 = this.GetNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal_1 = this.GetOrientationCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetOrientationCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore()
		{
			bool __retVal_1 = this.HasKeyboardFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool HasKeyboardFocusCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.HasKeyboardFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsContentElementCore()
		{
			bool __retVal_1 = this.IsContentElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsContentElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsContentElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsControlElementCore()
		{
			bool __retVal_1 = this.IsControlElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsControlElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsControlElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsEnabledCore()
		{
			bool __retVal_1 = this.IsEnabledCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsEnabledCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsEnabledCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsKeyboardFocusableCore()
		{
			bool __retVal_1 = this.IsKeyboardFocusableCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsKeyboardFocusableCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsKeyboardFocusableCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsOffscreenCore()
		{
			bool __retVal_1 = this.IsOffscreenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsOffscreenCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsOffscreenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsPasswordCore()
		{
			bool __retVal_1 = this.IsPasswordCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPasswordCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsPasswordCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsRequiredForFormCore()
		{
			bool __retVal_1 = this.IsRequiredForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsRequiredForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsRequiredForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.SetFocusCore()
		{
			this.SetFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void SetFocusCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.SetFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetPeerFromPointCore(point);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPeerFromPointCore(
								this, 
								point
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal_1 = this.GetLiveSettingCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLiveSettingCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.ShowContextMenuCore()
		{
			this.ShowContextMenuCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void ShowContextMenuCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.ShowContextMenuCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetControlledPeersCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.GetControlledPeersCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal_1 = this.NavigateCore(direction);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.NavigateCore(
								this, 
								direction
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal_1 = this.GetElementFromPointCore(pointInWindowCoordinates);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetElementFromPointCore(
								this, 
								pointInWindowCoordinates
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore()
		{
			object __retVal_1 = this.GetFocusedElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetFocusedElementCore()
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetFocusedElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal_1 = this.GetAnnotationsCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetAnnotationsCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore()
		{
			int __retVal_1 = this.GetPositionInSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetPositionInSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetPositionInSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetSizeOfSetCore()
		{
			int __retVal_1 = this.GetSizeOfSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetSizeOfSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetSizeOfSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetLevelCore()
		{
			int __retVal_1 = this.GetLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetLevelCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal_1 = this.GetLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLocalizedLandmarkTypeCore()
		{
			string __retVal_1 = this.GetLocalizedLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedLandmarkTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLocalizedLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsPeripheralCore()
		{
			bool __retVal_1 = this.IsPeripheralCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPeripheralCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsPeripheralCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsDataValidForFormCore()
		{
			bool __retVal_1 = this.IsDataValidForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDataValidForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsDataValidForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFullDescriptionCore()
		{
			string __retVal_1 = this.GetFullDescriptionCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetFullDescriptionCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFullDescriptionCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetDescribedByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetDescribedByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsToCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsToCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsFromCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsFromCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6.GetCultureCore()
		{
			int __retVal_1 = this.GetCultureCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetCultureCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6__Impl.Stubs.GetCultureCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8.GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal_1 = this.GetHeadingLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8__Impl.Stubs.GetHeadingLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9.IsDialogCore()
		{
			bool __retVal_1 = this.IsDialogCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDialogCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9__Impl.Stubs.IsDialogCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public AutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutomationPeerAnnotation : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutomationPeerAnnotation() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutomationPeerAnnotation(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer4
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer6
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer7
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer8
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerProtected
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides
	{
		object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface);

		string GetAcceleratorKeyCore();

		string GetAccessKeyCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore();

		string GetAutomationIdCore();

		global::Windows.Foundation.Rect GetBoundingRectangleCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore();

		string GetClassNameCore();

		global::Windows.Foundation.Point GetClickablePointCore();

		string GetHelpTextCore();

		string GetItemStatusCore();

		string GetItemTypeCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore();

		string GetLocalizedControlTypeCore();

		string GetNameCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore();

		bool HasKeyboardFocusCore();

		bool IsContentElementCore();

		bool IsControlElementCore();

		bool IsEnabledCore();

		bool IsKeyboardFocusableCore();

		bool IsOffscreenCore();

		bool IsPasswordCore();

		bool IsRequiredForFormCore();

		void SetFocusCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point);

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides2
	{
		void ShowContextMenuCore();

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides3
	{
		object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction);

		object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates);

		object GetFocusedElementCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore();

		int GetPositionInSetCore();

		int GetSizeOfSetCore();

		int GetLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerAnnotation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides4
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore();

		string GetLocalizedLandmarkTypeCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides5
	{
		bool IsPeripheralCore();

		bool IsDataValidForFormCore();

		string GetFullDescriptionCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides6
	{
		int GetCultureCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides8
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides9
	{
		bool IsDialogCore();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PatternInterface
	{
		Invoke = 0,
		Selection = 1,
		Value = 2,
		RangeValue = 3,
		Scroll = 4,
		ScrollItem = 5,
		ExpandCollapse = 6,
		Grid = 7,
		GridItem = 8,
		MultipleView = 9,
		Window = 10,
		SelectionItem = 11,
		Dock = 12,
		Table = 13,
		TableItem = 14,
		Toggle = 15,
		Transform = 16,
		Text = 17,
		ItemContainer = 18,
		VirtualizedItem = 19,
		Text2 = 20,
		TextChild = 21,
		TextRange = 22,
		Annotation = 23,
		Drag = 24,
		DropTarget = 25,
		ObjectModel = 26,
		Spreadsheet = 27,
		SpreadsheetItem = 28,
		Styles = 29,
		Transform2 = 30,
		SynchronizedInput = 31,
		TextEdit = 32,
		CustomNavigation = 33,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationControlType
	{
		Button = 0,
		Calendar = 1,
		CheckBox = 2,
		ComboBox = 3,
		Edit = 4,
		Hyperlink = 5,
		Image = 6,
		ListItem = 7,
		List = 8,
		Menu = 9,
		MenuBar = 10,
		MenuItem = 11,
		ProgressBar = 12,
		RadioButton = 13,
		ScrollBar = 14,
		Slider = 15,
		Spinner = 16,
		StatusBar = 17,
		Tab = 18,
		TabItem = 19,
		Text = 20,
		ToolBar = 21,
		ToolTip = 22,
		Tree = 23,
		TreeItem = 24,
		Custom = 25,
		Group = 26,
		Thumb = 27,
		DataGrid = 28,
		DataItem = 29,
		Document = 30,
		SplitButton = 31,
		Window = 32,
		Pane = 33,
		Header = 34,
		HeaderItem = 35,
		Table = 36,
		TitleBar = 37,
		Separator = 38,
		SemanticZoom = 39,
		AppBar = 40,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationOrientation
	{
		None = 0,
		Horizontal = 1,
		Vertical = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLiveSetting
	{
		Off = 0,
		Polite = 1,
		Assertive = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationNavigationDirection
	{
		Parent = 0,
		NextSibling = 1,
		PreviousSibling = 2,
		FirstChild = 3,
		LastChild = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLandmarkType
	{
		None = 0,
		Custom = 1,
		Form = 2,
		Main = 3,
		Navigation = 4,
		Search = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationHeadingLevel
	{
		None = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Level4 = 4,
		Level5 = 5,
		Level6 = 6,
		Level7 = 7,
		Level8 = 8,
		Level9 = 9,
	}
}

namespace Windows.UI.Xaml.Automation.Provider
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IRawElementProviderSimple : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple
	{
		public IRawElementProviderSimple(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIRawElementProviderSimple
	{
	}
}

namespace Windows.UI.Xaml.Controls
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Control : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IControl, global::Windows.UI.Xaml.Controls.IControl4, global::Windows.UI.Xaml.Controls.IControlProtected, global::Windows.UI.Xaml.Controls.IControlOverrides, global::Windows.UI.Xaml.Controls.IControlOverrides6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.add_IsEnabledChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		public virtual void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.remove_IsEnabledChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusEngaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		public virtual void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusEngaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusDisengaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		public virtual void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusDisengaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		object global::Windows.UI.Xaml.Controls.IControlProtected.get_DefaultStyleKey()
		{
			object __retVal_1 = this.get_DefaultStyleKey();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		protected virtual object get_DefaultStyleKey()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.get_DefaultStyleKey(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey(object value)
		{
			this.put_DefaultStyleKey(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		protected virtual void put_DefaultStyleKey(object value)
		{
			global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.put_DefaultStyleKey(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetTemplateChild(childName);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.GetTemplateChild(
								this, 
								childName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerEntered(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerEntered(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerPressed(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerPressed(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerMoved(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerMoved(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerReleased(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerReleased(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerExited(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerExited(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCaptureLost(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCaptureLost(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCanceled(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCanceled(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerWheelChanged(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerWheelChanged(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			this.OnTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			this.OnDoubleTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDoubleTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			this.OnHolding(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnHolding(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			this.OnRightTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnRightTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			this.OnManipulationStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			this.OnManipulationInertiaStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationInertiaStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			this.OnManipulationStarted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			this.OnManipulationDelta(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationDelta(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			this.OnManipulationCompleted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationCompleted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnGotFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnGotFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnLostFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnLostFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragEnter(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragEnter(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragLeave(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragLeave(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragOver(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragOver(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDrop(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDrop(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			this.OnCharacterReceived(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnCharacterReceived(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Control(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusEngagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
	{
		public FocusEngagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusDisengagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
	{
		public FocusDisengagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IUserControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UserControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IUserControl
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public UserControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance("Windows.UI.Xaml.Controls.UserControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.UserControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UserControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPageOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Page : global::Windows.UI.Xaml.Controls.UserControl, global::Windows.UI.Xaml.Controls.IPage, global::Windows.UI.Xaml.Controls.IPageOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Page() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance("Windows.UI.Xaml.Controls.Page");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Page).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedTo(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedTo(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			this.OnNavigatingFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatingFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Page(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UIElementCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Add(global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Contains(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.CopyTo(
					global::Windows.UI.Xaml.UIElement[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Remove(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.UIElement global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.IndexOf(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.Insert(
					int index, 
					global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.UIElement>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		public UIElementCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Panel : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public virtual global::Windows.UI.Xaml.Controls.UIElementCollection get_Children()
		{
			global::Windows.UI.Xaml.Controls.UIElementCollection __retVal = global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Panel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Grid : global::Windows.UI.Xaml.Controls.Panel, global::Windows.UI.Xaml.Controls.IGrid
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Grid() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance("Windows.UI.Xaml.Controls.Grid");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Grid).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public Grid(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContainerContentChangingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContainerContentChangingEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemIndex")]
		public int get_ItemIndex()
		{
			int __retVal = global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Stubs.get_ItemIndex(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		public object get_Item()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Stubs.get_Item(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Phase")]
		public uint get_Phase()
		{
			uint __retVal = global::Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs__Impl.Stubs.get_Phase(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ContainerContentChangingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ItemsControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IItemsControl, global::Windows.UI.Xaml.Controls.IItemsControlOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		public virtual object get_ItemsSource()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.get_ItemsSource(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		public virtual void put_ItemsSource(object value)
		{
			global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.put_ItemsSource(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_ItemTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.get_ItemTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		public virtual void put_ItemTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.put_ItemTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_ItemContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.get_ItemContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyle")]
		public virtual void put_ItemContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.Controls.IItemsControl__Impl.Stubs.put_ItemContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		bool global::Windows.UI.Xaml.Controls.IItemsControlOverrides.IsItemItsOwnContainerOverride(object item)
		{
			bool __retVal_1 = this.IsItemItsOwnContainerOverride(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsItemItsOwnContainerOverride(object item)
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.IsItemItsOwnContainerOverride(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IItemsControlOverrides.GetContainerForItemOverride()
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetContainerForItemOverride();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DependencyObject GetContainerForItemOverride()
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.GetContainerForItemOverride(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			this.ClearContainerForItemOverride(
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.ClearContainerForItemOverride(
								this, 
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			this.PrepareContainerForItemOverride(
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.PrepareContainerForItemOverride(
								this, 
								element, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemsChanged(object e)
		{
			this.OnItemsChanged(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemsChanged(object e)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemsChanged(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle)
		{
			this.OnItemContainerStyleChanged(
								oldItemContainerStyle, 
								newItemContainerStyle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemContainerStyleChanged(
								this, 
								oldItemContainerStyle, 
								newItemContainerStyle
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector)
		{
			this.OnItemContainerStyleSelectorChanged(
								oldItemContainerStyleSelector, 
								newItemContainerStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemContainerStyleSelectorChanged(
								this, 
								oldItemContainerStyleSelector, 
								newItemContainerStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate)
		{
			this.OnItemTemplateChanged(
								oldItemTemplate, 
								newItemTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemTemplateChanged(
								this, 
								oldItemTemplate, 
								newItemTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector)
		{
			this.OnItemTemplateSelectorChanged(
								oldItemTemplateSelector, 
								newItemTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnItemTemplateSelectorChanged(
								this, 
								oldItemTemplateSelector, 
								newItemTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IItemsControlOverrides.OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector)
		{
			this.OnGroupStyleSelectorChanged(
								oldGroupStyleSelector, 
								newGroupStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector)
		{
			global::Windows.UI.Xaml.Controls.IItemsControlOverrides__Impl.Stubs.OnGroupStyleSelectorChanged(
								this, 
								oldGroupStyleSelector, 
								newGroupStyleSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ItemsControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IStyleSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class StyleSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IStyleSelector, global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Style global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides.SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.Style __retVal_1 = this.SelectStyleCore(
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Style SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IStyleSelectorOverrides__Impl.Stubs.SelectStyleCore(
								this, 
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StyleSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplateSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDataTemplateSelector, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides__Impl.Stubs.SelectTemplateCore(
								this, 
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2__Impl.Stubs.SelectTemplateCore(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public DataTemplateSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GroupStyleSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IGroupStyleSelector, global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Controls.GroupStyle global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides.SelectGroupStyleCore(
					object group, 
					uint level)
		{
			global::Windows.UI.Xaml.Controls.GroupStyle __retVal_1 = this.SelectGroupStyleCore(
								group, 
								level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Controls.GroupStyle SelectGroupStyleCore(
					object group, 
					uint level)
		{
			global::Windows.UI.Xaml.Controls.GroupStyle __retVal = global::Windows.UI.Xaml.Controls.IGroupStyleSelectorOverrides__Impl.Stubs.SelectGroupStyleCore(
								this, 
								group, 
								level
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public GroupStyleSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyle))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGroupStyle2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.ComponentModel.INotifyPropertyChanged))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GroupStyle : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IGroupStyle, global::Windows.UI.Xaml.Controls.IGroupStyle2, global::System.ComponentModel.INotifyPropertyChanged
	{
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __add_PropertyChanged(global::System.ComponentModel.PropertyChangedEventHandler eventHandler)
		{
			return global::System.ComponentModel.INotifyPropertyChanged__Impl.RCWAdapter.add_PropertyChanged(
								this, 
								eventHandler
							);
		}

		void __remove_PropertyChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::System.ComponentModel.INotifyPropertyChanged__Impl.RCWAdapter.remove_PropertyChanged(
								this, 
								token
							);
		}

		public virtual event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			add
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<global::System.ComponentModel.PropertyChangedEventHandler>(
									new global::System.Func<global::System.ComponentModel.PropertyChangedEventHandler, global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__add_PropertyChanged), 
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_PropertyChanged), 
									value
								);
			}
			remove
			{
				global::System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<global::System.ComponentModel.PropertyChangedEventHandler>(
									new global::System.Action<global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>(this.__remove_PropertyChanged), 
									value
								);
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Panel")]
		public virtual global::Windows.UI.Xaml.Controls.ItemsPanelTemplate get_Panel()
		{
			global::Windows.UI.Xaml.Controls.ItemsPanelTemplate __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_Panel(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Panel")]
		public virtual void put_Panel(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_Panel(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_ContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_ContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyle")]
		public virtual void put_ContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_ContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyleSelector")]
		public virtual global::Windows.UI.Xaml.Controls.StyleSelector get_ContainerStyleSelector()
		{
			global::Windows.UI.Xaml.Controls.StyleSelector __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_ContainerStyleSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyleSelector")]
		public virtual void put_ContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_ContainerStyleSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		public virtual global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate()
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HeaderTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		public virtual void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HeaderTemplate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		public virtual global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector()
		{
			global::Windows.UI.Xaml.Controls.DataTemplateSelector __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HeaderTemplateSelector(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		public virtual void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HeaderTemplateSelector(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HidesIfEmpty")]
		public virtual bool get_HidesIfEmpty()
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.get_HidesIfEmpty(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HidesIfEmpty")]
		public virtual void put_HidesIfEmpty(bool value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle__Impl.Stubs.put_HidesIfEmpty(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderContainerStyle")]
		public virtual global::Windows.UI.Xaml.Style get_HeaderContainerStyle()
		{
			global::Windows.UI.Xaml.Style __retVal = global::Windows.UI.Xaml.Controls.IGroupStyle2__Impl.Stubs.get_HeaderContainerStyle(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderContainerStyle")]
		public virtual void put_HeaderContainerStyle(global::Windows.UI.Xaml.Style value)
		{
			global::Windows.UI.Xaml.Controls.IGroupStyle2__Impl.Stubs.put_HeaderContainerStyle(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public GroupStyle(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemsPanelTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemsPanelTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.Controls.IItemsPanelTemplate
	{
		public ItemsPanelTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SelectionChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.ISelectionChangedEventArgs
	{
		public SelectionChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IListViewBase4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ListViewBase : global::Windows.UI.Xaml.Controls.Primitives.Selector, global::Windows.UI.Xaml.Controls.IListViewBase, global::Windows.UI.Xaml.Controls.IListViewBase2, global::Windows.UI.Xaml.Controls.IListViewBase4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionMode")]
		public virtual global::Windows.UI.Xaml.Controls.ListViewSelectionMode get_SelectionMode()
		{
			global::Windows.UI.Xaml.Controls.ListViewSelectionMode __retVal = global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.get_SelectionMode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionMode")]
		public virtual void put_SelectionMode(global::Windows.UI.Xaml.Controls.ListViewSelectionMode value)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.put_SelectionMode(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClick")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClick(global::Windows.UI.Xaml.Controls.ItemClickEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.add_ItemClick(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClick")]
		public virtual void remove_ItemClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.remove_ItemClick(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.add_DragItemsStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		public virtual void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase__Impl.Stubs.remove_DragItemsStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainerContentChanging")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainerContentChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase2__Impl.Stubs.add_ContainerContentChanging(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainerContentChanging")]
		public virtual void remove_ContainerContentChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase2__Impl.Stubs.remove_ContainerContentChanging(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_DragItemsCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		public virtual void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_DragItemsCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingItemContainer")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingItemContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_ChoosingItemContainer(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingItemContainer")]
		public virtual void remove_ChoosingItemContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_ChoosingItemContainer(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingGroupHeaderContainer")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingGroupHeaderContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.add_ChoosingGroupHeaderContainer(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingGroupHeaderContainer")]
		public virtual void remove_ChoosingGroupHeaderContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IListViewBase4__Impl.Stubs.remove_ChoosingGroupHeaderContainer(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ListViewBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IItemClickEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ItemClickEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IItemClickEventArgs
	{
		public ItemClickEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragItemsStartingEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDragItemsStartingEventArgs
	{
		public DragItemsStartingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragItemsCompletedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDragItemsCompletedEventArgs
	{
		public DragItemsCompletedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ChoosingItemContainerEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IChoosingItemContainerEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ChoosingItemContainerEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ChoosingItemContainerEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ChoosingGroupHeaderContainerEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IChoosingGroupHeaderContainerEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ChoosingGroupHeaderContainerEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ChoosingGroupHeaderContainerEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGridView))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GridView : global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.IGridView
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GridView() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridViewFactory_CreateInstance("Windows.UI.Xaml.Controls.GridView");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IGridViewFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.GridView).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IGridViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IGridViewFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridViewFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public GridView(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextBlock))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.ITextBlock6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TextBlock : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.ITextBlock, global::Windows.UI.Xaml.Controls.ITextBlock6
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public TextBlock() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Controls.TextBlock");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		public global::Windows.UI.Xaml.Media.Brush get_Foreground()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_Foreground(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		public void put_Foreground(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_Foreground(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		public string get_Text()
		{
			string __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.get_Text(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		public void put_Text(string value)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.put_Text(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.add_ContextMenuOpening(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		public void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock__Impl.Stubs.remove_ContextMenuOpening(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsTextTrimmedChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsTextTrimmedChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBlock, global::Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.ITextBlock6__Impl.Stubs.add_IsTextTrimmedChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsTextTrimmedChanged")]
		public void remove_IsTextTrimmedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.ITextBlock6__Impl.Stubs.remove_IsTextTrimmedChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public TextBlock(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContextMenuEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextMenuEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IContextMenuEventArgs
	{
		public ContextMenuEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IsTextTrimmedChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IIsTextTrimmedChangedEventArgs
	{
		public IsTextTrimmedChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ContentControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IContentControl, global::Windows.UI.Xaml.Controls.IContentControlOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged(
					object oldContent, 
					object newContent)
		{
			this.OnContentChanged(
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentChanged(
					object oldContent, 
					object newContent)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentChanged(
								this, 
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			this.OnContentTemplateChanged(
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateChanged(
								this, 
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			this.OnContentTemplateSelectorChanged(
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateSelectorChanged(
								this, 
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ContentControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGridViewItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class GridViewItem : global::Windows.UI.Xaml.Controls.Primitives.SelectorItem, global::Windows.UI.Xaml.Controls.IGridViewItem
	{
		public GridViewItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Frame : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IFrame
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Frame() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance("Windows.UI.Xaml.Controls.Frame");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Frame).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		public virtual void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigating(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		public virtual void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigating(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		public virtual void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationStopped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		public virtual void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationStopped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual bool Navigate(
					global::System.Type sourcePageType, 
					object parameter)
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.Navigate(
								this, 
								sourcePageType, 
								parameter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Frame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusEngagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusDisengagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlProtected
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		object get_DefaultStyleKey();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		void put_DefaultStyleKey(object value);

		global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides
	{
		void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

		void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

		void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

		void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

		void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

		void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

		void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

		void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

		void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

		void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDrop(global::Windows.UI.Xaml.DragEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides6
	{
		void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPage
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageOverrides
	{
		void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::Windows.UI.Xaml.Controls.UIElementCollection get_Children();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContainerContentChangingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemIndex")]
		int get_ItemIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Item")]
		object get_Item();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Phase")]
		uint get_Phase();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemsSource")]
		object get_ItemsSource();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemsSource")]
		void put_ItemsSource(object value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_ItemTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemTemplate")]
		void put_ItemTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemContainerStyle")]
		global::Windows.UI.Xaml.Style get_ItemContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ItemContainerStyle")]
		void put_ItemContainerStyle(global::Windows.UI.Xaml.Style value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsControlOverrides
	{
		bool IsItemItsOwnContainerOverride(object item);

		global::Windows.UI.Xaml.DependencyObject GetContainerForItemOverride();

		void ClearContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item);

		void PrepareContainerForItemOverride(
					global::Windows.UI.Xaml.DependencyObject element, 
					object item);

		void OnItemsChanged(object e);

		void OnItemContainerStyleChanged(
					global::Windows.UI.Xaml.Style oldItemContainerStyle, 
					global::Windows.UI.Xaml.Style newItemContainerStyle);

		void OnItemContainerStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.StyleSelector oldItemContainerStyleSelector, 
					global::Windows.UI.Xaml.Controls.StyleSelector newItemContainerStyleSelector);

		void OnItemTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldItemTemplate, 
					global::Windows.UI.Xaml.DataTemplate newItemTemplate);

		void OnItemTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldItemTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newItemTemplateSelector);

		void OnGroupStyleSelectorChanged(
					global::Windows.UI.Xaml.Controls.GroupStyleSelector oldGroupStyleSelector, 
					global::Windows.UI.Xaml.Controls.GroupStyleSelector newGroupStyleSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyleSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Style SelectStyleCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyleSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyleSelectorOverrides
	{
		global::Windows.UI.Xaml.Controls.GroupStyle SelectGroupStyleCore(
					object group, 
					uint level);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyle
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Panel")]
		global::Windows.UI.Xaml.Controls.ItemsPanelTemplate get_Panel();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Panel")]
		void put_Panel(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyle")]
		global::Windows.UI.Xaml.Style get_ContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyle")]
		void put_ContainerStyle(global::Windows.UI.Xaml.Style value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContainerStyleSelector")]
		global::Windows.UI.Xaml.Controls.StyleSelector get_ContainerStyleSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContainerStyleSelector")]
		void put_ContainerStyleSelector(global::Windows.UI.Xaml.Controls.StyleSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplate")]
		global::Windows.UI.Xaml.DataTemplate get_HeaderTemplate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplate")]
		void put_HeaderTemplate(global::Windows.UI.Xaml.DataTemplate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderTemplateSelector")]
		global::Windows.UI.Xaml.Controls.DataTemplateSelector get_HeaderTemplateSelector();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderTemplateSelector")]
		void put_HeaderTemplateSelector(global::Windows.UI.Xaml.Controls.DataTemplateSelector value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HidesIfEmpty")]
		bool get_HidesIfEmpty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HidesIfEmpty")]
		void put_HidesIfEmpty(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemsPanelTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGroupStyle2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HeaderContainerStyle")]
		global::Windows.UI.Xaml.Style get_HeaderContainerStyle();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "HeaderContainerStyle")]
		void put_HeaderContainerStyle(global::Windows.UI.Xaml.Style value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SelectionChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.SelectionChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelectionChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SelectionMode")]
		global::Windows.UI.Xaml.Controls.ListViewSelectionMode get_SelectionMode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "SelectionMode")]
		void put_SelectionMode(global::Windows.UI.Xaml.Controls.ListViewSelectionMode value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ItemClick")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ItemClick(global::Windows.UI.Xaml.Controls.ItemClickEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ItemClick")]
		void remove_ItemClick(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsStarting(global::Windows.UI.Xaml.Controls.DragItemsStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsStarting")]
		void remove_DragItemsStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ItemClickEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.ItemClickEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IItemClickEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragItemsStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.DragItemsStartingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragItemsStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContainerContentChanging")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContainerContentChanging(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContainerContentChanging")]
		void remove_ContainerContentChanging(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IListViewBase4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragItemsCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragItemsCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.DragItemsCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragItemsCompleted")]
		void remove_DragItemsCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingItemContainer")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingItemContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingItemContainerEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingItemContainer")]
		void remove_ChoosingItemContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ChoosingGroupHeaderContainer")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ChoosingGroupHeaderContainer(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.ListViewBase, global::Windows.UI.Xaml.Controls.ChoosingGroupHeaderContainerEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ChoosingGroupHeaderContainer")]
		void remove_ChoosingGroupHeaderContainer(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragItemsCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IChoosingItemContainerEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IChoosingGroupHeaderContainerEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridViewFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridView
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextBlock
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Foreground")]
		global::Windows.UI.Xaml.Media.Brush get_Foreground();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Foreground")]
		void put_Foreground(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Text")]
		string get_Text();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Text")]
		void put_Text(string value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextMenuOpening")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextMenuOpening(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextMenuOpening")]
		void remove_ContextMenuOpening(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ContextMenuOpeningEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Controls.ContextMenuEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextMenuEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITextBlock6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsTextTrimmedChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsTextTrimmedChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.TextBlock, global::Windows.UI.Xaml.Controls.IsTextTrimmedChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsTextTrimmedChanged")]
		void remove_IsTextTrimmedChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIsTextTrimmedChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControlOverrides
	{
		void OnContentChanged(
					object oldContent, 
					object newContent);

		void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate);

		void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridViewItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		bool Navigate(
					global::System.Type sourcePageType, 
					object parameter);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ListViewSelectionMode
	{
		None = 0,
		Single = 1,
		Multiple = 2,
		Extended = 3,
	}
}

namespace Windows.UI.Xaml.Controls.Primitives
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.ISelector))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Selector : global::Windows.UI.Xaml.Controls.ItemsControl, global::Windows.UI.Xaml.Controls.Primitives.ISelector
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.ISelector__Impl.Stubs.add_SelectionChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		public virtual void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.ISelector__Impl.Stubs.remove_SelectionChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Selector(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class SelectorItem : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.Primitives.ISelectorItem
	{
		public SelectorItem(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelector
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SelectionChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SelectionChanged(global::Windows.UI.Xaml.Controls.SelectionChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SelectionChanged")]
		void remove_SelectionChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISelectorItem
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ComponentResourceLocation
	{
		Application = 0,
		Nested = 1,
	}
}

namespace Windows.UI.Xaml.Data
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					string name, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PropertyName")]
		string get_PropertyName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IValueConverter
	{
		object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);

		object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);
	}
}

namespace Windows.UI.Xaml.Input
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs
	{
		public KeyRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PointerRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs
	{
		public PointerRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs
	{
		public TappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DoubleTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs
	{
		public DoubleTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HoldingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs
	{
		public HoldingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RightTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs
	{
		public RightTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs
	{
		public ManipulationStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationInertiaStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs
	{
		public ManipulationInertiaStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ManipulationStartedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs
	{
		public ManipulationStartedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationDeltaRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs
	{
		public ManipulationDeltaRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationCompletedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs
	{
		public ManipulationCompletedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IContextRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IContextRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContextRequestedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.ContextRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ContextRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayRequestedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayRequestedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayDismissedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayDismissedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayDismissedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyInvokedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IGettingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GettingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IGettingFocusEventArgs
	{
		public GettingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ILosingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LosingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ILosingFocusEventArgs
	{
		public LosingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NoFocusCandidateFoundEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs
	{
		public NoFocusCandidateFoundEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CharacterReceivedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs
	{
		public CharacterReceivedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProcessKeyboardAcceleratorEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs
	{
		public ProcessKeyboardAcceleratorEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyboardAcceleratorInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs
	{
		public KeyboardAcceleratorInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void KeyEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void PointerEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPointerRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DoubleTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDoubleTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void HoldingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHoldingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RightTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRightTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationInertiaStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationInertiaStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationDeltaEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationDeltaRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationCompletedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationCompletedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayDismissedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyInvokedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGettingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILosingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INoFocusCandidateFoundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICharacterReceivedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProcessKeyboardAcceleratorEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAcceleratorInvokedEventArgs
	{
	}
}

namespace Windows.UI.Xaml.Interop
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstanceWithAllParameters(
					global::System.Collections.Specialized.NotifyCollectionChangedAction action, 
					global::System.Collections.IList newItems, 
					global::System.Collections.IList oldItems, 
					int newIndex, 
					int oldIndex, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Action")]
		global::System.Collections.Specialized.NotifyCollectionChangedAction get_Action();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewItems")]
		global::System.Collections.IList get_NewItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldItems")]
		global::System.Collections.IList get_OldItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewStartingIndex")]
		int get_NewStartingIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldStartingIndex")]
		int get_OldStartingIndex();
	}
}

namespace Windows.UI.Xaml.Markup
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Markup.IXamlBindingHelper))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class XamlBindingHelper : global::System.__ComObject, global::Windows.UI.Xaml.Markup.IXamlBindingHelper
	{
		public static void SetDataTemplateComponent(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Markup.IDataTemplateComponent value)
		{
			__Factory_Windows_UI_Xaml_Markup__IXamlBindingHelperStatics_SetDataTemplateComponent(
								"Windows.UI.Xaml.Markup.XamlBindingHelper", 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml_Markup__IXamlBindingHelperStatics_SetDataTemplateComponent(
					string typeName, 
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Markup.IDataTemplateComponent value)
		{
			global::Windows.UI.Xaml.Markup.IXamlBindingHelperStatics__Impl.Stubs.SetDataTemplateComponent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Markup.IXamlBindingHelperStatics).TypeHandle
												), 
								element, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static object ConvertValue(
					global::System.Type type, 
					object value)
		{
			object retval;
			retval = __Factory_Windows_UI_Xaml_Markup__IXamlBindingHelperStatics_ConvertValue(
								"Windows.UI.Xaml.Markup.XamlBindingHelper", 
								type, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static object __Factory_Windows_UI_Xaml_Markup__IXamlBindingHelperStatics_ConvertValue(
					string typeName, 
					global::System.Type type, 
					object value)
		{
			object __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Markup.IXamlBindingHelperStatics__Impl.Stubs.ConvertValue(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Markup.IXamlBindingHelperStatics).TypeHandle
												), 
								type, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public XamlBindingHelper(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMetadataProvider
	{
		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type);

		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName);

		global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlType
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BaseType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_BaseType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.Markup.IXamlMember get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsArray")]
		bool get_IsArray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCollection")]
		bool get_IsCollection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsConstructible")]
		bool get_IsConstructible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDictionary")]
		bool get_IsDictionary();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMarkupExtension")]
		bool get_IsMarkupExtension();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBindable")]
		bool get_IsBindable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_ItemType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_KeyType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnderlyingType")]
		global::System.Type get_UnderlyingType();

		object ActivateInstance();

		object CreateFromString(string value);

		global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name);

		void AddToVector(
					object instance, 
					object value);

		void AddToMap(
					object instance, 
					object key, 
					object value);

		void RunInitializer();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMember
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAttachable")]
		bool get_IsAttachable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDependencyProperty")]
		bool get_IsDependencyProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		bool get_IsReadOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_TargetType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.UI.Xaml.Markup.IXamlType get_Type();

		object GetValue(object instance);

		void SetValue(
					object instance, 
					object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlType2 : global::Windows.UI.Xaml.Markup.IXamlType
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BoxedType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_BoxedType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector
	{
		void Connect(
					int connectionId, 
					object target);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector2
	{
		global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(
					int connectionId, 
					object target);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateComponent
	{
		void Recycle();

		void ProcessBindings(
					object item, 
					int itemIndex, 
					int phase, 
					out int nextPhase);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlBindingHelperStatics
	{
		void SetDataTemplateComponent(
					global::Windows.UI.Xaml.DependencyObject element, 
					global::Windows.UI.Xaml.Markup.IDataTemplateComponent value);

		object ConvertValue(
					global::System.Type type, 
					object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlBindingHelper
	{
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentPropertyAttribute : global::System.Attribute
	{
		public ContentPropertyAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.UI.Xaml.Markup.ContentPropertyAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
		public string Name;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct XmlnsDefinition
	{
		public string XmlNamespace;
		public string Namespace;
	}
}

namespace Windows.UI.Xaml.Media
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrush))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrushOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Brush : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IBrush, global::Windows.UI.Xaml.Media.IBrushOverrides2, global::Windows.UI.Composition.IAnimationObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		protected Brush() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Media__IBrushFactory_CreateInstance("Windows.UI.Xaml.Media.Brush");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Media__IBrushFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
			global::System.IntPtr __pRetVal_WithAggregation;
			__pRetVal_WithAggregation = global::Windows.UI.Xaml.Media.IBrushFactory__Impl.Stubs.CreateInstance(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.IBrushFactory).TypeHandle
												), 
								outerInspectable, 
								out innerInspectable
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
			global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
			return innerInspectable;
		}

		void global::Windows.UI.Xaml.Media.IBrushOverrides2.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.Media.IBrushOverrides2__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Brush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.ISolidColorBrush))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SolidColorBrush : global::Windows.UI.Xaml.Media.Brush, global::Windows.UI.Xaml.Media.ISolidColorBrush
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public SolidColorBrush(global::Windows.UI.Color color) : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Media__ISolidColorBrushFactory_CreateInstanceWithColor(
								"Windows.UI.Xaml.Media.SolidColorBrush", 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Media__ISolidColorBrushFactory_CreateInstanceWithColor(
					string typeName, 
					global::Windows.UI.Color color)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.Media.ISolidColorBrushFactory__Impl.Stubs.CreateInstanceWithColor(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.Media.ISolidColorBrushFactory).TypeHandle
												), 
								color
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		public SolidColorBrush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrush
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushOverrides2
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISolidColorBrushFactory
	{
		global::System.IntPtr CreateInstanceWithColor(global::Windows.UI.Color color);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISolidColorBrush
	{
	}
}

namespace Windows.UI.Xaml.Navigation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationEventArgs
	{
		public NavigationEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigatingCancelEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs
	{
		public NavigatingCancelEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationFailedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		public global::System.Type get_SourcePageType()
		{
			global::System.Type __retVal = global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Stubs.get_SourcePageType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigatingCancelEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		global::System.Type get_SourcePageType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatingCancelEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationFailedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationStoppedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);
}

